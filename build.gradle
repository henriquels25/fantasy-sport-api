plugins {
    id 'org.springframework.boot' version '2.3.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'com.adarshr.test-logger' version '2.1.1'
    id 'jacoco'
    id 'org.sonarqube' version '3.0'
}

group = 'io.henriquels25'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR9")
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.1.6.Final'
    implementation 'org.hibernate.validator:hibernate-validator-annotation-processor:6.1.6.Final'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0'
    testImplementation('org.springframework.cloud:spring-cloud-starter-contract-stub-runner') {
        exclude group: 'com.github.tomakehurst', module: 'wiremock-standalone'
    }
    testImplementation("com.github.tomakehurst:wiremock-jre8-standalone:2.27.2")

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

task unitTest(type: Test) {
    useJUnitPlatform {
        excludeTags 'integration', 'acceptance'
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integration'
    }
}

task acceptanceTest(type: Test) {
    useJUnitPlatform {
        includeTags 'acceptance'
    }
}

testlogger {
    showSimpleNames true
}

jacocoTestReport {
    sourceSets sourceSets.main
    getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/*.exec"))
    reports {
        xml.enabled true
    }
}

jacoco {
    toolVersion = "0.8.6"
}

sonarqube {
    properties {
        property "sonar.projectKey", "henriquels25_fantasy-sport-api"
        property "sonar.organization", "henriquels"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.exclusions", "**/FantasySportApiApplication.java"
    }
}